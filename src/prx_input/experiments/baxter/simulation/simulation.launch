<launch>

  <!-- Load independent files -->
        
  <rosparam command="load" file="$(find prx_input)/templates/applications/empty_application.yaml"/>
  <rosparam>
    application:
      start_simulation: true
  </rosparam>
  <rosparam command="load" file="$(find manipulation)/input/manipulation_simulator.yaml"/>
  <!-- Load template files -->
        
  <rosparam command="load" ns="controller" file="$(find prx_input)/templates/controllers/consumer.yaml"/>
  <rosparam command="load" ns="plant" file="$(find manipulation)/input/baxter/baxter.yaml"/>
  
  <!-- Override template parameters -->
        
  <rosparam ns="controller">
  </rosparam>
        
  <rosparam ns="plant">
  </rosparam>
       
  <!-- Set up concrete system tree -->
   
  <rosparam command="load" ns="simulator/subsystems/consumer">
    template: "controller"
    keep_last_control: false
  </rosparam>
        
  <rosparam command="load" ns="simulator/subsystems/consumer/subsystems/baxter">
    template: "plant"
  </rosparam>



  <rosparam ns="simulator/obstacles">
    ball:
      type: obstacle
      geometries:
        -
          name: ball
          collision_geometry:
            type: sphere
            radius: 0.2
            material: red
          config:
            position: [0.9, 0.4, 1.2]
            orientation: [0, 0, 0, 1]
  </rosparam>

  
  <!-- Dunny movable object required by the manipulator simulator in the environment -->
  <rosparam command="load" ns="simulator/subsystems/obj">
    type: movable_body
    object_type: cup
    max_step: 0.01
    state_space: 
      min: [-5.5, -5.5, -100, -1, -1, -1, -1]
      max: [5.5, 5.5, 100, 1, 1, 1, 1]
      scale: [0.025, 0.025, 0.05, 0.5, 0.5, 0.5, 0.5]
    input_control_space: 
      none: 4
    root_geom: body
    geometries:
      -
        name: body
        collision_geometry:
          type: sphere
          radius: 0.01
          material: red
    initial_state: [0, 0, -100, 0, 0, 0, 1]
  </rosparam>
  
</launch>
